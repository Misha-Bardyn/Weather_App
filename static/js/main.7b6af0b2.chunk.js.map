{"version":3,"sources":["components/TopButtonsCountry/TopButtonsCountry.module.css","App.module.css","components/Inputs/Inputs.module.css","components/Forecast/Forecast.module.css","servicec/WeatherService.js","components/Forecast/Forecast.js","components/Inputs/Inputs.js","components/TemperatureAndDetails/TemperatureAndDetails.js","components/TimeAndLocation/TimeAndLocation.js","components/TopButtonsCountry/TopButtonsCountry.js","App.js","index.js","components/TemperatureAndDetails/TemperatureAndDetails.module.css","components/TimeAndLocation/TimeAndLocation.module.css"],"names":["module","exports","wrapper","btnCity","formInput","wrapInput","input","typeTemperche","btnTemperche","t","search","text","blockInfo","blockDay","info","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","makeIconURL","iconID","concat","getWeatherData","_ref","_asyncToGenerator","_callee","city","units","URL","_args","arguments","_context","fetch","res","json","_x","apply","tztimemilisek","tz","nowDate","Date","getTime","getTimezoneOffset","formatCurrentWeather","data","list","_data$city","country","timezone","_list$0$weather$","weather","description","icon","_list$0$main","main","temp","feels_like","temp_min","temp_max","humidity","speed","wind","arrTempOnWeekend","formatCards","iconURL","sunset","showTimeSunRiseSet","sunRise","sunrise","localTime","dayAndYear","toLocaleDateString","weekday","day","month","year","hour","toLocaleString","hour12","minute","daysOfWeek","timeMiliSecond","today","getDay","console","log","tzone","time","toUTCString","filter","reading","dt_txt","includes","map","Math","round","getFormattedWeatherData","_ref2","_callee2","formattedCurrentWeather","_context2","_objectSpread","_x2","_x3","Forecast","_ref$weather","React","createElement","className","s","index","style","width","fontWeight","fontSize","lineHeight","src","alt","margin","Inputs","props","_useState","useState","_useState2","_slicedToArray","setCity","classes","placeholder","onChange","event","target","FiSearch","size","color","onClick","setGuery","searchWeatherCity","alert","setUnits","TemperatureAndDetails","toUpperCase","blockImg","toFixed","wrapDetails","detail","CiTempHigh","CiDroplet","BiWind","sunInfo","ImSun","TbSunset2","CiSun","TimeAndLocation","wrapperTime","wrapperLocal","local","TopButtonsCountry","id","title","item","App","query","_useState3","_useState4","setWeather","_useState5","_useState6","useEffect","t0","fetchWeatherData","backgroundColor","threshold","formatBackground","ReactDOM","createRoot","document","getElementById","render"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,QAAA,mCAAAC,QAAA,wDCAlBH,EAAAC,QAAA,CAAkBC,QAAA,6ECAlBF,EAAAC,QAAA,CAAkBG,UAAA,0BAAAC,UAAA,0BAAAC,MAAA,sBAAAC,cAAA,8BAAAC,aAAA,6BAAAC,EAAA,kBAAAC,OAAA,gECAlBV,EAAAC,QAAA,CAAkBC,QAAA,0BAAAS,KAAA,uBAAAC,UAAA,4BAAAC,SAAA,2BAAAC,KAAA,iLCAlBC,EAAA,kBAAAd,GAAA,IAAAA,EAAA,GAAAe,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAArC,EAAAsC,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA1C,EAAA+D,EAAAxB,IAAA,OAAAvC,IAAA+E,MAAA7C,EAAAsC,EAAAY,YAAApF,EAAAW,MAAAuB,EAAAmD,KAAAb,EAAAc,QAAA,WAAApD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA1C,GAAAkC,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA6C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1C,KAAAgD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAkD,EAAAQ,WAAAlC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAgD,WAAA,EAAAJ,OAAA,SAAA7D,EAAAwB,QAAAkC,EAAAzC,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAjG,EAAAoC,KAAA0D,EAAAI,GAAA,OAAAlB,EAAA1E,MAAAwF,EAAAI,GAAAlB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAA1E,WAAAsE,EAAAI,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA6D,YAAApF,EAAAwB,EAAA1B,EAAA,qBAAA/B,EAAAsH,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAhE,GAAA,uBAAAgE,EAAAH,aAAAG,EAAAE,QAAA1H,EAAA2H,KAAA,SAAAJ,GAAA,OAAAvG,OAAA4G,eAAA5G,OAAA4G,eAAAL,EAAA9D,IAAA8D,EAAAM,UAAApE,EAAAxB,EAAAsF,EAAAxF,EAAA,sBAAAwF,EAAAtG,UAAAD,OAAA8B,OAAAkB,GAAAuD,GAAAvH,EAAA8H,MAAA,SAAA1E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA3D,EAAAqE,gBAAArE,EAAA+H,MAAA,SAAAxF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAtE,EAAAsH,oBAAA9E,GAAAyF,IAAA/B,OAAAnB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAAyG,EAAA/B,UAAAjC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAhE,EAAAkI,KAAA,SAAAC,GAAA,IAAAC,EAAApH,OAAAmH,GAAAD,EAAA,WAAA5G,KAAA8G,EAAAF,EAAAtB,KAAAtF,GAAA,OAAA4G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA7F,EAAA4G,EAAAI,MAAA,GAAAhH,KAAA8G,EAAA,OAAAlC,EAAA1E,MAAAF,EAAA4E,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlG,EAAA+D,SAAAf,EAAA/B,UAAA,CAAAwG,YAAAzE,EAAA+D,MAAA,SAAAwB,GAAA,GAAA5E,KAAA6E,KAAA,EAAA7E,KAAAuC,KAAA,EAAAvC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAgD,WAAAzC,QAAA2C,IAAA0B,EAAA,QAAAb,KAAA/D,KAAA,MAAA+D,EAAAe,OAAA,IAAAvH,EAAAoC,KAAAK,KAAA+D,KAAAR,OAAAQ,EAAAgB,MAAA,MAAA/E,KAAA+D,QAAA5B,IAAA6C,KAAA,WAAAhF,KAAAiC,MAAA,MAAAgD,EAAAjF,KAAAgD,WAAA,GAAAG,WAAA,aAAA8B,EAAAvF,KAAA,MAAAuF,EAAAxF,IAAA,OAAAO,KAAAkF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAnF,KAAAiC,KAAA,MAAAkD,EAAA,IAAA/F,EAAAY,KAAA,SAAAoF,EAAAC,EAAAC,GAAA,OAAArE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA0F,EAAA/F,EAAAmD,KAAA8C,EAAAC,IAAAlG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAmD,EAAA,QAAA7B,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAAxC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA5C,KAAA6E,KAAA,KAAAU,EAAAhI,EAAAoC,KAAAgD,EAAA,YAAA6C,EAAAjI,EAAAoC,KAAAgD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAxF,KAAA6E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA7C,KAAA6E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAvF,KAAA6E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAhE,MAAA,6CAAAxB,KAAA6E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAd,OAAA,SAAAtC,EAAAD,GAAA,QAAAgE,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,QAAA5C,KAAA6E,MAAAtH,EAAAoC,KAAAgD,EAAA,eAAA3C,KAAA6E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAA/F,GAAA,aAAAA,IAAA+F,EAAA7C,QAAAnD,MAAAgG,EAAA3C,aAAA2C,EAAA,UAAAxE,EAAAwE,IAAAtC,WAAA,UAAAlC,EAAAvB,OAAAuB,EAAAxB,MAAAgG,GAAAzF,KAAAQ,OAAA,OAAAR,KAAAuC,KAAAkD,EAAA3C,WAAAlD,GAAAI,KAAA0F,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA8B,GAAA,aAAA9B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAuC,KAAAtB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAkF,KAAAlF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAuC,KAAA,kBAAAtB,EAAAvB,MAAAqD,IAAA/C,KAAAuC,KAAAQ,GAAAnD,GAAA+F,OAAA,SAAA7C,GAAA,QAAAW,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA9C,KAAA0F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA/C,IAAAgG,MAAA,SAAAhD,GAAA,QAAAa,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAAvB,KAAA,KAAAmG,EAAA5E,EAAAxB,IAAAyD,EAAAP,GAAA,OAAAkD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAxC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAxC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAvD,EADA,IAEM0J,EAAc,SAACC,GAAM,2CAAAC,OAAwCD,EAAM,YAGnEE,EAAc,eAAAC,EAAAC,YAAAjJ,IAAA6G,KAAG,SAAAqC,EAAOC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAvJ,IAAAwB,KAAA,SAAAgI,GAAA,cAAAA,EAAA9B,KAAA8B,EAAApE,MAAA,OACwE,OADtEgE,EAAKE,EAAAjD,OAAA,QAAArB,IAAAsE,EAAA,GAAAA,EAAA,GAAE,SACjCD,EAAG,sDAAAP,OAAyDK,EAAI,WAAAL,OAN1D,mCAM2E,WAAAA,OAAUM,GAAKI,EAAApE,KAAA,EACzFqE,MAAMJ,GAClBpF,KAAK,SAACyF,GAAG,OAAGA,EAAIC,SAAO,cAAAH,EAAA3E,OAAA,SAAA2E,EAAA9E,MAAA,wBAAA8E,EAAA3B,SAAAqB,MAC3B,gBAJmBU,GAAA,OAAAZ,EAAAa,MAAAhH,KAAA0G,YAAA,GAMdO,EAAgB,SAACC,GACnB,IAAKC,EAAU,IAAIC,KAKnB,OAJiBD,EAAQE,UACuB,IAA9BF,EAAQG,oBAGZ,IAAOJ,GAInBK,EAAsB,SAACC,GAAO,IAEzBC,EAAQD,EAARC,KAAIC,EACwBF,EAAKlB,KAAjCqB,EAAOD,EAAPC,QAAS5D,EAAI2D,EAAJ3D,KAAM6D,EAAQF,EAARE,SAAQC,EACFJ,EAAK,GAAGK,QAAQ,GAArCC,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAIC,EACiCR,EAAK,GAAGS,KAA1DC,EAAIF,EAAJE,KAAMC,EAAUH,EAAVG,WAAYC,EAAQJ,EAARI,SAAUC,EAAQL,EAARK,SAAUC,EAAQN,EAARM,SACtCC,EAASf,EAAK,GAAGgB,KAAjBD,MAEP,MAAM,CACFE,iBAAkBC,EAAYnB,GAC9BO,cACAa,QAAS7C,EAAYiC,GACrBG,OACAC,aACAC,WACAC,WACAC,WACAZ,UACAa,QACAzE,OACA6D,WACAiB,OAAQC,EAAmBtB,EAAKlB,KAAKuC,OAAQrB,EAAKlB,KAAKsB,UACvDmB,QAASD,EAAmBtB,EAAKlB,KAAK0C,QAASxB,EAAKlB,KAAKsB,UACzDX,cAAeA,EAAcO,EAAKlB,KAAKsB,YAMzCqB,EAAY,SAAChC,GA4Bf,MAAO,CAACiC,WArBS,IAAI9B,KAAKH,GAAekC,mBAAmB,QAC5D,CACIC,QAAQ,OACRC,IAAI,UACJC,MAAM,OACNC,KAAK,YAgBWC,KAbT,IAAIpC,KAAKH,GAAewC,eAAe,QAClD,CACIC,QAAQ,EACRF,KAAK,UACLG,OAAQ,cAcVC,EAAa,SAACC,GAChB,IAAMD,EAAa,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UAClFE,EAAQ,IAAI1C,KAAKyC,GAAgBE,SAEvC,OADAC,QAAQC,IAAIH,GACJF,EAAW7E,MAAM+E,GAAO7D,OAAO2D,EAAW7E,MAAM,EAAG+E,EAAM,KAO/DhB,EAAqB,SAACoB,EAAOC,GAAI,OAAM,IAAI/C,KAAsB,KAAhB+C,EAAQD,IAAcE,cAAcrF,MAAM,GAAI,KAG/F4D,EAAc,SAACnB,GAOlB,OANsBA,EAAKC,KAAK4C,OAAO,SAAAC,GAAO,OAAIA,EAAQC,OAAOC,SAAS,cACxEC,IAAI,SAACpB,GAGF,MAAO,CAAClB,KAFGuC,KAAKC,MAAMtB,EAAInB,KAAKC,MAEjBH,KADHqB,EAAIvB,QAAQ,GAAGE,SAO3B4C,EAAuB,eAAAC,EAAAzE,YAAAjJ,IAAA6G,KAAG,SAAA8G,EAAOhO,EAAQyJ,GAAK,IAAAwE,EAAA,OAAA5N,IAAAwB,KAAA,SAAAqM,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAzI,MAAA,cAAAyI,EAAAzI,KAAA,EACb2D,EAAepJ,EAAQyJ,GAAOnF,KAAKmG,GAAqB,OAAjE,OAAvBwD,EAAuBC,EAAAnJ,KAAAmJ,EAAAhJ,OAAA,SAAAiJ,YAAA,GAIfF,IAAuB,wBAAAC,EAAAhG,SAAA8F,MACrC,gBAN4BI,EAAAC,GAAA,OAAAN,EAAA7D,MAAAhH,KAAA0G,YAAA,GC3Ef0E,MA7Bf,SAAiBjF,GAAmD,IAAAkF,EAAAlF,EAAhD2B,QAAWY,EAAgB2C,EAAhB3C,iBAAkBzB,EAAaoE,EAAbpE,cAC7C,OACIqE,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,UAAWC,IAAEnP,SACdgP,IAAAC,cAAA,KAAGC,UAAWC,IAAE1O,MAAM,oBAE1BuO,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKC,UAAWC,IAAEzO,WACdsO,IAAAC,cAAA,OAAKC,UAAWC,IAAExO,UAEV2M,EAAW3C,GAAelC,MAAM,EAAG,GAAG0F,IAAI,SAACpB,EAAKqC,GAAK,OACjDJ,IAAAC,cAAA,KAAG5N,IAAK+N,EAAOF,UAAWC,IAAEvO,KAAMyO,MAAO,CAAEC,MAAO,OAAQC,WAAY,MAAOC,SAAU,OAAQC,WAAY,SAAW1C,MAGlIiC,IAAAC,cAAA,OAAKC,UAAWC,IAAExO,UAEVyL,EAAiB+B,IAAI,SAACpB,EAAKqC,GAAK,OAC5BJ,IAAAC,cAAA,OAAKC,UAAWC,IAAEvO,KAAMS,IAAK+N,GACzBJ,IAAAC,cAAA,OAAKS,IAAKjG,EAAYsD,EAAIrB,MAAOiE,IAAI,WAAWN,MAAO,CAAEC,MAAO,OAAQM,OAAQ,aAChFZ,IAAAC,cAAA,KAAGI,MAAO,CAAEE,WAAY,QAAQ,GAAA5F,OAAKoD,EAAIlB,KAAI,wCCW9DgE,MA/Bf,SAAgBC,GAAO,IAAAC,EAEGC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7B/F,EAAIiG,EAAA,GAAEE,EAAOF,EAAA,GAMpB,OACEjB,IAAAC,cAAA,OAAKC,UAAWkB,IAAQlQ,WACtB8O,IAAAC,cAAA,OAAKC,UAAWkB,IAAQjQ,WACtB6O,IAAAC,cAAA,SAAO7L,KAAK,OAAOiN,YAAY,YAAYnB,UAAWkB,IAAQhQ,MAC5DmB,MAAOyI,GAAQ,GAAIsG,SAAU,SAAAC,GAAWJ,EAAQI,EAAMC,OAAOjP,UAE/DyN,IAAAC,cAACwB,IAAQ,CAACC,KAAM,GAAIC,MAAM,QAAQzB,UAAWkB,IAAQ5P,OACnDoQ,QAAS,WAAQ5G,EAZC,SAAUA,GAClC8F,EAAMe,SAAS7G,GACfmG,EAAQ,IAUsBW,CAAkB9G,GAAQ+G,MAAM,2BAG5D/B,IAAAC,cAAA,OAAKC,UAAWkB,IAAQ/P,eACtB2O,IAAAC,cAAA,UAAQxH,KAAK,SAASyH,UAAWkB,IAAQ9P,aAAcsQ,QAAS,kBAAMd,EAAMkB,SAAS,YAAW,SAGhGhC,IAAAC,cAAA,KAAGC,UAAWkB,IAAQ7P,GAAG,KACzByO,IAAAC,cAAA,UAAQxH,KAAK,WAAWyH,UAAWkB,IAAQ9P,aAAcsQ,QAAS,kBAAMd,EAAMkB,SAAS,cAAa,0DC+C7FC,MA/Df,SAA8BpH,GAa3B,IAAAkF,EAAAlF,EAb8B2B,QAEzBC,EAAWsD,EAAXtD,YACAa,EAAOyC,EAAPzC,QACAT,EAAIkD,EAAJlD,KACAC,EAAUiD,EAAVjD,WACAC,EAAQgD,EAARhD,SACAC,EAAQ+C,EAAR/C,SACAC,EAAQ8C,EAAR9C,SACAC,EAAK6C,EAAL7C,MACAK,EAAMwC,EAANxC,OACAE,EAAOsC,EAAPtC,QAGJ,OACIuC,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,UAAWC,IAAE3D,SACdwD,IAAAC,cAAA,SAAIxD,EAAYjD,OAAO,GAAG0I,cAAgBzF,EAAYhD,MAAM,KAEhEuG,IAAAC,cAAA,OAAKC,UAAWC,IAAEgC,UACdnC,IAAAC,cAAA,OAAKS,IAAKpD,EAASqD,IAAI,aACvBX,IAAAC,cAAA,YAAAtF,OAAOkC,EAAKuF,UAAS,SACrBpC,IAAAC,cAAA,OAAKC,UAAWC,IAAEkC,aACdrC,IAAAC,cAAA,OAAKC,UAAWC,IAAEmC,QACdtC,IAAAC,cAACsC,IAAU,CAACb,KAAM,KAAM,cACxB1B,IAAAC,cAAA,eAAAtF,OAAUmC,EAAWsF,UAAS,UAElCpC,IAAAC,cAAA,OAAKC,UAAWC,IAAEmC,QACdtC,IAAAC,cAACuC,IAAS,CAACd,KAAM,KAAM,aACvB1B,IAAAC,cAAA,eAAAtF,OAAUsC,EAASmF,UAAS,OAEhCpC,IAAAC,cAAA,OAAKC,UAAWC,IAAEmC,QACdtC,IAAAC,cAACwC,IAAM,CAACf,KAAM,KAAM,SACpB1B,IAAAC,cAAA,eAAAtF,OAAUuC,EAAK,aAK3B8C,IAAAC,cAAA,OAAKC,UAAWC,IAAEuC,SACd1C,IAAAC,cAAC0C,IAAK,CAACjB,KAAM,KACb1B,IAAAC,cAAA,SAAG,QACMD,IAAAC,cAAA,eAAAtF,OAAU8C,EAAO,SAE1BuC,IAAAC,cAAA,SAAG,KACHD,IAAAC,cAAC2C,IAAS,CAAClB,KAAM,KACjB1B,IAAAC,cAAA,SAAG,OACKD,IAAAC,cAAA,eAAAtF,OAAU4C,EAAM,SAExByC,IAAAC,cAAA,SAAG,KACHD,IAAAC,cAAC0C,IAAK,CAACjB,KAAM,KACb1B,IAAAC,cAAA,SAAG,QACMD,IAAAC,cAAA,eAAAtF,OAAUqC,EAASoF,UAAS,UAErCpC,IAAAC,cAAA,SAAG,KACHD,IAAAC,cAAC4C,IAAK,CAACnB,KAAM,KACb1B,IAAAC,cAAA,SAAG,OACKD,IAAAC,cAAA,eAAAtF,OAAUoC,EAASqF,UAAS,6BC3CrCU,MAnBf,SAAwBjI,GAA+C,IAAAkF,EAAAlF,EAA5C2B,QAAUb,EAAaoE,EAAbpE,cAAelD,EAAIsH,EAAJtH,KAAM4D,EAAO0D,EAAP1D,QAEtD,OACI2D,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,UAAWkB,IAAQ2B,aACpB/C,IAAAC,cAAA,KAAGC,UAAWkB,IAAQvC,MAAK,GAAAlE,OAEnBgD,EAAUhC,GAAeiC,WAAU,mBAAAjD,OAAkBgD,EAAUhC,GAAeuC,KAAI,SAG9F8B,IAAAC,cAAA,OAAKC,UAAWkB,IAAQ4B,cACpBhD,IAAAC,cAAA,KAAGC,UAAWkB,IAAQ6B,OAAM,GAAAtI,OACpBlC,EAAI,MAAAkC,OAAK0B,wBCqBlB6G,MAnCf,SAA2BpC,GAuBvB,OACId,IAAAC,cAAA,OAAKC,UAAWkB,IAAQpQ,SAvBf,CACT,CACImS,GAAI,EACJC,MAAO,UAEX,CACID,GAAI,EACJC,MAAO,UAEX,CACID,GAAI,EACJC,MAAO,SAEX,CACID,GAAI,EACJC,MAAO,WAEX,CACID,GAAI,EACJC,MAAO,UAKCjE,IAAI,SAACkE,GAAI,OACbrD,IAAAC,cAAA,UAAQ5N,IAAKgR,EAAKF,GAAIjD,UAAWkB,IAAQnQ,QACrC2Q,QAAS,kBAAMd,EAAMe,SAASwB,EAAKD,SAClCC,EAAKD,wBC7B1BvR,EAAA,kBAAAd,GAAA,IAAAA,EAAA,GAAAe,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAArC,EAAAsC,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA1C,EAAA+D,EAAAxB,IAAA,OAAAvC,IAAA+E,MAAA7C,EAAAsC,EAAAY,YAAApF,EAAAW,MAAAuB,EAAAmD,KAAAb,EAAAc,QAAA,WAAApD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA1C,GAAAkC,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA6C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1C,KAAAgD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAkD,EAAAQ,WAAAlC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAgD,WAAA,EAAAJ,OAAA,SAAA7D,EAAAwB,QAAAkC,EAAAzC,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAjG,EAAAoC,KAAA0D,EAAAI,GAAA,OAAAlB,EAAA1E,MAAAwF,EAAAI,GAAAlB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAA1E,WAAAsE,EAAAI,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA6D,YAAApF,EAAAwB,EAAA1B,EAAA,qBAAA/B,EAAAsH,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAhE,GAAA,uBAAAgE,EAAAH,aAAAG,EAAAE,QAAA1H,EAAA2H,KAAA,SAAAJ,GAAA,OAAAvG,OAAA4G,eAAA5G,OAAA4G,eAAAL,EAAA9D,IAAA8D,EAAAM,UAAApE,EAAAxB,EAAAsF,EAAAxF,EAAA,sBAAAwF,EAAAtG,UAAAD,OAAA8B,OAAAkB,GAAAuD,GAAAvH,EAAA8H,MAAA,SAAA1E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA3D,EAAAqE,gBAAArE,EAAA+H,MAAA,SAAAxF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAtE,EAAAsH,oBAAA9E,GAAAyF,IAAA/B,OAAAnB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAAyG,EAAA/B,UAAAjC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAhE,EAAAkI,KAAA,SAAAC,GAAA,IAAAC,EAAApH,OAAAmH,GAAAD,EAAA,WAAA5G,KAAA8G,EAAAF,EAAAtB,KAAAtF,GAAA,OAAA4G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA7F,EAAA4G,EAAAI,MAAA,GAAAhH,KAAA8G,EAAA,OAAAlC,EAAA1E,MAAAF,EAAA4E,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlG,EAAA+D,SAAAf,EAAA/B,UAAA,CAAAwG,YAAAzE,EAAA+D,MAAA,SAAAwB,GAAA,GAAA5E,KAAA6E,KAAA,EAAA7E,KAAAuC,KAAA,EAAAvC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAgD,WAAAzC,QAAA2C,IAAA0B,EAAA,QAAAb,KAAA/D,KAAA,MAAA+D,EAAAe,OAAA,IAAAvH,EAAAoC,KAAAK,KAAA+D,KAAAR,OAAAQ,EAAAgB,MAAA,MAAA/E,KAAA+D,QAAA5B,IAAA6C,KAAA,WAAAhF,KAAAiC,MAAA,MAAAgD,EAAAjF,KAAAgD,WAAA,GAAAG,WAAA,aAAA8B,EAAAvF,KAAA,MAAAuF,EAAAxF,IAAA,OAAAO,KAAAkF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAnF,KAAAiC,KAAA,MAAAkD,EAAA,IAAA/F,EAAAY,KAAA,SAAAoF,EAAAC,EAAAC,GAAA,OAAArE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA0F,EAAA/F,EAAAmD,KAAA8C,EAAAC,IAAAlG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAmD,EAAA,QAAA7B,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAAxC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA5C,KAAA6E,KAAA,KAAAU,EAAAhI,EAAAoC,KAAAgD,EAAA,YAAA6C,EAAAjI,EAAAoC,KAAAgD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAxF,KAAA6E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA7C,KAAA6E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAvF,KAAA6E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAhE,MAAA,6CAAAxB,KAAA6E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAd,OAAA,SAAAtC,EAAAD,GAAA,QAAAgE,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,QAAA5C,KAAA6E,MAAAtH,EAAAoC,KAAAgD,EAAA,eAAA3C,KAAA6E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAA/F,GAAA,aAAAA,IAAA+F,EAAA7C,QAAAnD,MAAAgG,EAAA3C,aAAA2C,EAAA,UAAAxE,EAAAwE,IAAAtC,WAAA,UAAAlC,EAAAvB,OAAAuB,EAAAxB,MAAAgG,GAAAzF,KAAAQ,OAAA,OAAAR,KAAAuC,KAAAkD,EAAA3C,WAAAlD,GAAAI,KAAA0F,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA8B,GAAA,aAAA9B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAuC,KAAAtB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAkF,KAAAlF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAuC,KAAA,kBAAAtB,EAAAvB,MAAAqD,IAAA/C,KAAAuC,KAAAQ,GAAAnD,GAAA+F,OAAA,SAAA7C,GAAA,QAAAW,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA9C,KAAA0F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA/C,IAAAgG,MAAA,SAAAhD,GAAA,QAAAa,EAAAzD,KAAAgD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA3C,KAAAgD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAAvB,KAAA,KAAAmG,EAAA5E,EAAAxB,IAAAyD,EAAAP,GAAA,OAAAkD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAxC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAxC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAvD,EAqDeuS,MA9Cf,WAAe,IAAAvC,EAGaC,mBAAS,QAAOC,EAAAC,YAAAH,EAAA,GAAnCwC,EAAKtC,EAAA,GAAEY,EAAQZ,EAAA,GAAAuC,EACQxC,mBAAS,MAAKyC,EAAAvC,YAAAsC,EAAA,GAArChH,EAAOiH,EAAA,GAAEC,EAAUD,EAAA,GAAAE,EACA3C,mBAAS,UAAS4C,EAAA1C,YAAAyC,EAAA,GAArC1I,EAAK2I,EAAA,GAAE5B,EAAQ4B,EAAA,GAsBtB,OArBAC,oBAAU,YACc,eAAAhJ,EAAAC,YAAAjJ,IAAA6G,KAAG,SAAAqC,IAAA,IAAAmB,EAAA,OAAArK,IAAAwB,KAAA,SAAAgI,GAAA,cAAAA,EAAA9B,KAAA8B,EAAApE,MAAA,cAAAoE,EAAA9B,KAAA,EAAA8B,EAAApE,KAAA,EAEFqI,EAAwBiE,EAAOtI,GAAM,OAAlDiB,EAAIb,EAAA9E,KACVmN,EAAWxH,GACXwC,QAAQC,IAAIzC,GAAKb,EAAApE,KAAA,gBAAAoE,EAAA9B,KAAA,EAAA8B,EAAAyI,GAAAzI,EAAA,SAEjB0G,MAAM,sGAAqB,yBAAA1G,EAAA3B,SAAAqB,EAAA,iBAG9B,kBATqB,OAAAF,EAAAa,MAAAhH,KAAA0G,YAAA,EAUtB2I,IACC,CAACR,EAAOtI,IAUT+E,IAAAC,cAAA,OAAKC,UAAWkB,IAAQpQ,QAASqP,MARV,WACvB,IAAK7D,EAAS,MAAO,CAAEwH,gBAAiB,WACxC,IAAMC,EAAsB,WAAVhJ,EAAqB,GAAK,GAC5C,OAAIuB,EAAQK,MAAQoH,EAAkB,CAAED,gBAAiB,WAClD,CAAEA,gBAAiB,WAIcE,IACtClE,IAAAC,cAACiD,EAAiB,CAACrB,SAAUA,IAC7B7B,IAAAC,cAACY,EAAM,CACLgB,SAAUA,EACVG,SAAUA,IAEXxF,GACCwD,IAAAC,cAAA,WACED,IAAAC,cAAC6C,EAAe,CAACtG,QAASA,IAC1BwD,IAAAC,cAACgC,EAAqB,CAACzF,QAASA,IAChCwD,IAAAC,cAACH,EAAQ,CAACtD,QAASA,OCzChB2H,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACDvE,IAAAC,cAACqD,EAAG,0BCNRxS,EAAAC,QAAA,CAAkByL,QAAA,uCAAA2F,SAAA,wCAAAE,YAAA,2CAAAC,OAAA,sCAAAI,QAAA,2DCAlB5R,EAAAC,QAAA,CAAkBgS,YAAA,qCAAAC,aAAA,sCAAAnE,KAAA,8BAAAoE,MAAA","file":"static/js/main.7b6af0b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TopButtonsCountry_wrapper__3tpRq\",\"btnCity\":\"TopButtonsCountry_btnCity__DULo3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3ZtQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Inputs_formInput__G4DVY\",\"wrapInput\":\"Inputs_wrapInput__70K7t\",\"input\":\"Inputs_input__R14bn\",\"typeTemperche\":\"Inputs_typeTemperche__OhdaN\",\"btnTemperche\":\"Inputs_btnTemperche__2M0Sc\",\"t\":\"Inputs_t__2-yHo\",\"search\":\"Inputs_search__30wu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Forecast_wrapper__3DNrT\",\"text\":\"Forecast_text__3A4Nq\",\"blockInfo\":\"Forecast_blockInfo__3Ac_t\",\"blockDay\":\"Forecast_blockDay__3J4FU\",\"info\":\"Forecast_info__1GtB9\"};","const API_KEY = \"099957f4ff1c3985055849ad1035df98\";\r\n\r\nconst makeIconURL = (iconID)=>`https://openweathermap.org/img/wn/${iconID}@2x.png`\r\n\r\n// Опрацювання запиту до погоди\r\nconst getWeatherData = async (city, units ='metric') =>{\r\n    const URL = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=${units}`;\r\n    return await fetch(URL)\r\n    .then((res)=>res.json())\r\n}\r\n// let a \r\nconst tztimemilisek = (tz)=>{\r\n    let  nowDate = new Date()\r\n    let  localTime = nowDate.getTime()\r\n    let localOffset = nowDate.getTimezoneOffset() * 60000\r\n    let  utc = localTime + localOffset\r\n    // a= utc + (1000 * tz)\r\n    return utc + (1000 * tz)\r\n}\r\n\r\n// Сортування потрібних параметрів\r\nconst formatCurrentWeather =(data)=>{\r\n    \r\n    const {list} = data;\r\n    const {country, name, timezone } = data.city\r\n    const {description, icon} = list[0].weather[0]; \r\n    const {temp, feels_like, temp_min, temp_max, humidity} = list[0].main; \r\n    const {speed} = list[0].wind; \r\n    \r\n    return{\r\n        arrTempOnWeekend: formatCards(data), // передавати тільки list  а не всью data\r\n        description, \r\n        iconURL: makeIconURL(icon), \r\n        temp,\r\n        feels_like, \r\n        temp_min, \r\n        temp_max, \r\n        humidity,\r\n        country, \r\n        speed, \r\n        name,\r\n        timezone,\r\n        sunset: showTimeSunRiseSet(data.city.sunset, data.city.timezone),\r\n        sunRise: showTimeSunRiseSet(data.city.sunrise, data.city.timezone),\r\n        tztimemilisek: tztimemilisek(data.city.timezone),\r\n        // localTime: localTime(a).hour\r\n    }\r\n}\r\n\r\n// Опрацювання локальної дати та години (Доробити у функцію)\r\nconst localTime = (tztimemilisek)=>{\r\n    // let  nowDate = new Date()\r\n    // let  localTime = nowDate.getTime()\r\n    // let localOffset = nowDate.getTimezoneOffset() * 60000\r\n    // let  utc = localTime + localOffset\r\n    // let timeMiliSecond = utc + (1000 * tz)\r\n    \r\n    let dayAndYear = new Date(tztimemilisek).toLocaleDateString('en-us', \r\n    {\r\n        weekday:\"long\", \r\n        day:\"numeric\", \r\n        month:\"long\",\r\n        year:\"numeric\", \r\n    })\r\n    \r\n    let hour = new Date(tztimemilisek).toLocaleString('en-us',\r\n    {\r\n        hour12: false, \r\n        hour:'numeric',\r\n        minute: \"numeric\",\r\n    })\r\n    \r\n    //опрацювання днів тижні відносто теперішьного\r\n    // const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    // const today = new Date(timeMiliSecond).getDay();\r\n    // const weekDays = daysOfWeek.slice(today).concat(daysOfWeek.slice(0, today-2));\r\n    // console.log(weekDays);\r\n    \r\n    return {dayAndYear, hour,\r\n        //  weekDays\r\n        }\r\n}\r\n  //опрацювання днів тижні відносто поточного дня\r\nconst daysOfWeek = (timeMiliSecond)=>{\r\n    const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    const today = new Date(timeMiliSecond).getDay();\r\n    console.log(today)\r\n    return  daysOfWeek.slice(today).concat(daysOfWeek.slice(0, today-1));\r\n   \r\n}\r\n\r\n\r\n\r\n// Опрацювання дати схід захід сонця \r\nconst showTimeSunRiseSet = (tzone, time) =>  new Date((time + (tzone))*1000).toUTCString().slice(17, 22)\r\n    \r\n// масив з температурами та іконкими на 5 днів\r\nconst formatCards = (data) => {\r\n    let arrTempAndIcon = data.list.filter(reading => reading.dt_txt.includes(\"15:00:00\"))\r\n    .map((day) =>{\r\n        let temp = Math.round(day.main.temp)\r\n        let icon = day.weather[0].icon\r\n        return {temp, icon}\r\n    })\r\n   return arrTempAndIcon\r\n}\r\n\r\n// цього не було\r\n const getFormattedWeatherData = async (search, units)=>{\r\n    let formattedCurrentWeather = await getWeatherData(search, units).then(formatCurrentWeather)\r\n    \r\n    // await getWeatherData(search, units).then(formatCards)?????\r\n    // let formattedshowTimeSunRiseSet = await getWeatherData(search, units).then(showTimeSunRiseSet)???\r\n    return { ...formattedCurrentWeather}\r\n }\r\n\r\n   \r\nexport {getFormattedWeatherData, localTime, makeIconURL, daysOfWeek}\r\n\r\n// визивати функції в компонентах де вони потрібні\r\n","import React from 'react'\r\nimport s from './Forecast.module.css'\r\nimport { makeIconURL } from '../../servicec/WeatherService'\r\nimport { daysOfWeek } from '../../servicec/WeatherService';\r\nfunction Forecast({ weather: { arrTempOnWeekend, tztimemilisek } }) {\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <p className={s.text}>hourly forecast</p>\r\n            </div>\r\n            <hr/>\r\n            <div className={s.blockInfo}>\r\n                <div className={s.blockDay}>\r\n                    {\r\n                        daysOfWeek(tztimemilisek).slice(0, 5).map((day, index) =>\r\n                            <p key={index} className={s.info} style={{ width: \"70px\", fontWeight: \"300\", fontSize: '14px', lineHeight: '20px' }}>{day}</p>)\r\n                    }\r\n                </div>\r\n                <div className={s.blockDay}>\r\n                    {\r\n                        arrTempOnWeekend.map((day, index) =>\r\n                            <div className={s.info} key={index}>\r\n                                <img src={makeIconURL(day.icon)} alt='icon_img' style={{ width: \"65px\", margin: \"4px 0px\" }} />\r\n                                <p style={{ fontWeight: \"500\" }}>{`${day.temp}°`}</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Forecast\r\n","import React, { useState } from 'react'\r\nimport classes from './Inputs.module.css'\r\nimport { FiSearch } from 'react-icons/fi';\r\nfunction Inputs(props) {\r\n  \r\n  const [city, setCity] = useState('')\r\n  const searchWeatherCity = function (city) {\r\n    props.setGuery(city)\r\n    setCity('')\r\n  }\r\n\r\n  return (\r\n    <div className={classes.formInput}>\r\n      <div className={classes.wrapInput}>\r\n        <input type='text' placeholder='Search...' className={classes.input}\r\n          value={city || ''} onChange={event => { setCity(event.target.value) }}\r\n        />\r\n        <FiSearch size={25} color='white' className={classes.search}\r\n          onClick={() => { city ? searchWeatherCity(city) : alert('Please enter a city') }}\r\n        />\r\n      </div>\r\n      <div className={classes.typeTemperche}>\r\n        <button name='metric' className={classes.btnTemperche} onClick={() => props.setUnits('metric')}>\r\n          °C\r\n        </button>\r\n        <p className={classes.t}>|</p>\r\n        <button name='imperial' className={classes.btnTemperche} onClick={() => props.setUnits('imperial')}>\r\n          °F\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inputs\r\n","import React from 'react'\r\nimport s from './TemperatureAndDetails.module.css'\r\nimport { CiTempHigh } from 'react-icons/ci';\r\nimport { CiDroplet } from 'react-icons/ci';\r\nimport { BiWind } from 'react-icons/bi';\r\nimport { ImSun } from 'react-icons/im';\r\nimport { TbSunset2 } from 'react-icons/tb';\r\nimport { CiSun } from 'react-icons/ci';\r\n\r\n\r\nfunction TemperatureAndDetails({ weather: \r\n    { \r\n        description,\r\n        iconURL,\r\n        temp,\r\n        feels_like,\r\n        temp_min,\r\n        temp_max,\r\n        humidity,\r\n        speed,\r\n        sunset,\r\n        sunRise\r\n    }\r\n}) {\r\n    return (\r\n        <div>\r\n            <div className={s.weather}>\r\n                <p>{description.charAt(0).toUpperCase() + description.slice(1)}</p>\r\n            </div>\r\n            <div className={s.blockImg}>\r\n                <img src={iconURL} alt='icon_img' />\r\n                <p>{`${temp.toFixed()}°`}</p>\r\n                <div className={s.wrapDetails}>\r\n                    <div className={s.detail}>\r\n                        <CiTempHigh size={19} /> Real fell:\r\n                        <span>{`${feels_like.toFixed()}°`}</span>\r\n                    </div>\r\n                    <div className={s.detail}>\r\n                        <CiDroplet size={18} /> Humidity:\r\n                        <span>{`${humidity.toFixed()}%`}</span>\r\n                    </div>\r\n                    <div className={s.detail}>\r\n                        <BiWind size={18} /> Wind:\r\n                        <span>{`${speed} km/h`}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.sunInfo}>\r\n                <ImSun size={18} />\r\n                <p>\r\n                    Rise:<span>{`${sunRise} AM`}</span>\r\n                </p>\r\n                <p>|</p>\r\n                <TbSunset2 size={20} />\r\n                <p>\r\n                    Set:<span>{`${sunset} AM`}</span>\r\n                </p>\r\n                <p>|</p>\r\n                <ImSun size={18} />\r\n                <p>\r\n                    High:<span>{`${temp_max.toFixed()}°`}</span>\r\n                </p>\r\n                <p>|</p>\r\n                <CiSun size={20} />\r\n                <p>\r\n                    Low:<span>{`${temp_min.toFixed()}°`}</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemperatureAndDetails\r\n","import React from 'react'\r\nimport classes from './TimeAndLocation.module.css'\r\nimport { localTime } from '../../servicec/WeatherService'\r\n\r\nfunction TimeAndLocation({ weather: {tztimemilisek, name, country } }) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.wrapperTime}>\r\n                <p className={classes.time}>\r\n                {/* {console.log(localTime)} */}\r\n                    {`${localTime(tztimemilisek).dayAndYear} | Local time: ${localTime(tztimemilisek).hour} PM`}\r\n                </p>\r\n            </div>\r\n            <div className={classes.wrapperLocal}>\r\n                <p className={classes.local}>\r\n                    {`${name}, ${country}`}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeAndLocation\r\n","import React from 'react'\r\nimport classes from './TopButtonsCountry.module.css'\r\nfunction TopButtonsCountry(props) {\r\n    let cities = [\r\n        {\r\n            id: 1,\r\n            title: 'London'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Sydney'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Tokyo'\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'Toronto'\r\n        },\r\n        {\r\n            id: 5,\r\n            title: 'Paris'\r\n        }\r\n    ]\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {cities.map((item) =>\r\n                <button key={item.id} className={classes.btnCity}\r\n                    onClick={() => props.setGuery(item.title)}>\r\n                    {item.title}\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopButtonsCountry\r\n","import classes from './App.module.css';\nimport Forecast from './components/Forecast/Forecast';\nimport Inputs from './components/Inputs/Inputs';\nimport TemperatureAndDetails from './components/TemperatureAndDetails/TemperatureAndDetails';\nimport TimeAndLocation from './components/TimeAndLocation/TimeAndLocation';\nimport TopButtonsCountry from './components/TopButtonsCountry/TopButtonsCountry';\nimport React, { useEffect, useState } from 'react';\nimport { getFormattedWeatherData } from './servicec/WeatherService'\nfunction App() {\n\n\n  const [query, setGuery] = useState('Lviv');\n  const [weather, setWeather] = useState(null);\n  const [units, setUnits] = useState('metric');\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const data = await getFormattedWeatherData(query, units);\n        setWeather(data)\n        console.log(data)\n      } catch (error) {\n        alert('Введіть норм місто')\n      }\n\n    };\n    fetchWeatherData();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return { backgroundColor: '#0e7490' };\n    const threshold = units === 'metric' ? 20 : 50;\n    if (weather.temp <= threshold) return { backgroundColor: '#0e7490' };\n    return { backgroundColor: '#db4c14' }\n  }\n\n  return (\n    <div className={classes.wrapper} style={formatBackground()}>\n      <TopButtonsCountry setGuery={setGuery} />\n      <Inputs\n        setGuery={setGuery}\n        setUnits={setUnits}\n      />\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n          <Forecast weather={weather} />\n        </div>\n      )}\n    </div>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"TemperatureAndDetails_weather__2F0sy\",\"blockImg\":\"TemperatureAndDetails_blockImg__rTQPQ\",\"wrapDetails\":\"TemperatureAndDetails_wrapDetails__gCKyZ\",\"detail\":\"TemperatureAndDetails_detail__1VxXm\",\"sunInfo\":\"TemperatureAndDetails_sunInfo__2wffY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTime\":\"TimeAndLocation_wrapperTime__3FExV\",\"wrapperLocal\":\"TimeAndLocation_wrapperLocal__1Iqug\",\"time\":\"TimeAndLocation_time__19mdo\",\"local\":\"TimeAndLocation_local__1LZzp\"};"],"sourceRoot":""}